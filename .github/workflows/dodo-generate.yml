name: dodoGenerate

on:
  # push:
  #   paths:
  #     - 'packages/dodo-contract-request/contract-config/**'
  #     - 'packages/dodo-contract-request/scripts/contract-generate.ts'
  #     - '.github/workflows/dodo-generate.yml'
  workflow_dispatch: # trigger manually
    inputs:
      generate:
        description: Generate
        required: false
        default: true
        type: boolean

jobs:
  generate:
    if: ${{ inputs.generate }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.2.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: restore yarn
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Generate
        run: yarn workspace @dodoex/dodo-contract-request contract:generate

      - name: Add and commit
        run: export COMMIT_MESSAGE="chore(generate){{':'}} generate contract [skip ci]"  && yarn git:commit

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.REF_NAME }}
